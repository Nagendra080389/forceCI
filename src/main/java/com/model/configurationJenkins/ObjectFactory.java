//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.10.20 at 01:14:19 PM IST 
//


package com.model.configurationJenkins;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.src package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Project_QNAME = new QName("", "project");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.src
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ProjectType }
     * 
     */
    public ProjectType createProjectType() {
        return new ProjectType();
    }

    /**
     * Create an instance of {@link ComCoravyHudsonPluginsGithubGithubProjectPropertyType }
     * 
     */
    public ComCoravyHudsonPluginsGithubGithubProjectPropertyType createComCoravyHudsonPluginsGithubGithubProjectPropertyType() {
        return new ComCoravyHudsonPluginsGithubGithubProjectPropertyType();
    }

    /**
     * Create an instance of {@link BuildWrappersType }
     * 
     */
    public BuildWrappersType createBuildWrappersType() {
        return new BuildWrappersType();
    }

    /**
     * Create an instance of {@link HudsonTasksAntType }
     * 
     */
    public HudsonTasksAntType createHudsonTasksAntType() {
        return new HudsonTasksAntType();
    }

    /**
     * Create an instance of {@link HudsonPluginsGitUserRemoteConfigType }
     * 
     */
    public HudsonPluginsGitUserRemoteConfigType createHudsonPluginsGitUserRemoteConfigType() {
        return new HudsonPluginsGitUserRemoteConfigType();
    }

    /**
     * Create an instance of {@link BlackListTargetBranchesType }
     * 
     */
    public BlackListTargetBranchesType createBlackListTargetBranchesType() {
        return new BlackListTargetBranchesType();
    }

    /**
     * Create an instance of {@link OrgJenkinsciPluginsGhprbGhprbBranchType }
     * 
     */
    public OrgJenkinsciPluginsGhprbGhprbBranchType createOrgJenkinsciPluginsGhprbGhprbBranchType() {
        return new OrgJenkinsciPluginsGhprbGhprbBranchType();
    }

    /**
     * Create an instance of {@link TriggersType }
     * 
     */
    public TriggersType createTriggersType() {
        return new TriggersType();
    }

    /**
     * Create an instance of {@link BuildersType }
     * 
     */
    public BuildersType createBuildersType() {
        return new BuildersType();
    }

    /**
     * Create an instance of {@link OrgJenkinsciPluginsGhprbGhprbTriggerType }
     * 
     */
    public OrgJenkinsciPluginsGhprbGhprbTriggerType createOrgJenkinsciPluginsGhprbGhprbTriggerType() {
        return new OrgJenkinsciPluginsGhprbGhprbTriggerType();
    }

    /**
     * Create an instance of {@link HudsonPluginsGitBranchSpecType }
     * 
     */
    public HudsonPluginsGitBranchSpecType createHudsonPluginsGitBranchSpecType() {
        return new HudsonPluginsGitBranchSpecType();
    }

    /**
     * Create an instance of {@link BranchesType }
     * 
     */
    public BranchesType createBranchesType() {
        return new BranchesType();
    }

    /**
     * Create an instance of {@link WhiteListTargetBranchesType }
     * 
     */
    public WhiteListTargetBranchesType createWhiteListTargetBranchesType() {
        return new WhiteListTargetBranchesType();
    }

    /**
     * Create an instance of {@link OrgJenkinsciPluginsGhprbExtensionsStatusGhprbSimpleStatusType }
     * 
     */
    public OrgJenkinsciPluginsGhprbExtensionsStatusGhprbSimpleStatusType createOrgJenkinsciPluginsGhprbExtensionsStatusGhprbSimpleStatusType() {
        return new OrgJenkinsciPluginsGhprbExtensionsStatusGhprbSimpleStatusType();
    }

    /**
     * Create an instance of {@link ScmType }
     * 
     */
    public ScmType createScmType() {
        return new ScmType();
    }

    /**
     * Create an instance of {@link UserRemoteConfigsType }
     * 
     */
    public UserRemoteConfigsType createUserRemoteConfigsType() {
        return new UserRemoteConfigsType();
    }

    /**
     * Create an instance of {@link SubmoduleCfgType }
     * 
     */
    public SubmoduleCfgType createSubmoduleCfgType() {
        return new SubmoduleCfgType();
    }

    /**
     * Create an instance of {@link PropertiesType }
     * 
     */
    public PropertiesType createPropertiesType() {
        return new PropertiesType();
    }

    /**
     * Create an instance of {@link ExtensionsType }
     * 
     */
    public ExtensionsType createExtensionsType() {
        return new ExtensionsType();
    }

    /**
     * Create an instance of {@link HudsonPluginsWsCleanupPreBuildCleanupType }
     * 
     */
    public HudsonPluginsWsCleanupPreBuildCleanupType createHudsonPluginsWsCleanupPreBuildCleanupType() {
        return new HudsonPluginsWsCleanupPreBuildCleanupType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProjectType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "project")
    public JAXBElement<ProjectType> createProject(ProjectType value) {
        return new JAXBElement<ProjectType>(_Project_QNAME, ProjectType.class, null, value);
    }

}
